[{"/mnt/c/wamp64/www/MeetHalfway/front/src/index.js":"1","/mnt/c/wamp64/www/MeetHalfway/front/src/reportWebVitals.js":"2","/mnt/c/wamp64/www/MeetHalfway/front/src/App.js":"3","/mnt/c/wamp64/www/MeetHalfway/front/src/components/show_photo.js":"4","/mnt/c/wamp64/www/MeetHalfway/front/src/components/dlImages.js":"5","/mnt/c/wamp64/www/MeetHalfway/front/src/components/index.js":"6","/mnt/c/wamp64/www/MeetHalfway/front/src/components/SearchImages.jsx":"7","/mnt/c/wamp64/www/MeetHalfway/front/src/components/ImageGrid.jsx":"8","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/index.js":"9","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/reportWebVitals.js":"10","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/App.js":"11","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImages.js":"12","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/DatabaseLog.js":"13","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImage/SearchImages.jsx":"14","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImage/ImageGrid.jsx":"15","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/ListCities.js":"16","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/DetailCity.js":"17"},{"size":612,"mtime":1612367475974,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1612340315875,"results":"20","hashOfConfig":"19"},{"size":920,"mtime":1612371994343,"results":"21","hashOfConfig":"19"},{"size":926,"mtime":1612370342335,"results":"22","hashOfConfig":"19"},{"size":1766,"mtime":1612371815089,"results":"23","hashOfConfig":"19"},{"size":66,"mtime":1612340315866,"results":"24","hashOfConfig":"19"},{"size":1359,"mtime":1612368152497,"results":"25","hashOfConfig":"19"},{"size":707,"mtime":1612369573448,"results":"26","hashOfConfig":"19"},{"size":612,"mtime":1617791194349,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1612340315875,"results":"29","hashOfConfig":"28"},{"size":1751,"mtime":1618700435554,"results":"30","hashOfConfig":"28"},{"size":1914,"mtime":1617781141106,"results":"31","hashOfConfig":"28"},{"size":3531,"mtime":1618701356767,"results":"32","hashOfConfig":"28"},{"size":2408,"mtime":1618703899689,"results":"33","hashOfConfig":"28"},{"size":917,"mtime":1618703501234,"results":"34","hashOfConfig":"28"},{"size":3217,"mtime":1618701156922,"results":"35","hashOfConfig":"28"},{"size":2127,"mtime":1618703826102,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dj8lx5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"khnylo",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/mnt/c/wamp64/www/MeetHalfway/front/src/index.js",[],"/mnt/c/wamp64/www/MeetHalfway/front/src/reportWebVitals.js",[],"/mnt/c/wamp64/www/MeetHalfway/front/src/App.js",["78"],"/mnt/c/wamp64/www/MeetHalfway/front/src/components/show_photo.js",[],"/mnt/c/wamp64/www/MeetHalfway/front/src/components/dlImages.js",["79","80"],"/mnt/c/wamp64/www/MeetHalfway/front/src/components/index.js",[],"/mnt/c/wamp64/www/MeetHalfway/front/src/components/SearchImages.jsx",[],"/mnt/c/wamp64/www/MeetHalfway/front/src/components/ImageGrid.jsx",[],"/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/index.js",[],["81","82"],"/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/reportWebVitals.js",[],"/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/App.js",["83"],"import React, {Component} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport ListCities from './components/ListCities';\nimport DetailCity from './components/DetailCity';\nimport DatabaseLog from './components/DatabaseLog';\nimport { Helmet } from 'react-helmet'\n\nclass App extends Component {\n\n/*    constructor(props) {\n        super(props)\n        this.state = {\n            is_connected: false\n        }\n\n    }*/\n\n/*\n    axios.get('http://localhost:8080/api/is_authenticated').then(res => {\n    console.log(res)\n}).catch(err => console.log(err))*/\n\n  render() {\n    return (\n        <div className=\"App container m-auto\">\n            <Helmet>\n                <script src=\"https://kit.fontawesome.com/9ce41bd472.js\" crossOrigin=\"anonymous\"></script>\n            </Helmet>\n\n            <link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\" />\n            <nav className=\"\">\n                <ul className=\"flex justify-around\">\n                    <li className='p-4'><Link to={'/list-cities'} className=\"nav-link p-4 hover:underline\">Voir la liste des villes <i className='fa-fw fa fa-city'></i></Link></li>\n                    <li className='p-4'><Link to={'/log-database'} className=\"nav-link p-4 hover:underline\">Se connecter à la base <i className='fa-fw fa fa-sign-in-alt'></i></Link></li>\n                </ul>\n            </nav>\n            <hr />\n            <Switch>\n                <Route path='/list-cities' component={ListCities}/>\n                <Route path='/log-database' component={DatabaseLog}/>\n                <Route path='/city/:wiki_code/:city_name' component={DetailCity}/>\n            </Switch>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImages.js",["84","85"],"import React, { Component, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport SearchImages from \"./dlImage/SearchImages\";\r\n\r\nconst DlImages = () => {\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const GiveImages = (images) => {\r\n        const cl = e => console.log(e);\r\n\r\n        var FR= new FileReader();\r\n        FR.addEventListener(\"load\", function(ev) {\r\n            axios.post('http://localhost:8080/api/city/city_update_local_path', {\r\n                base64_img_local: ev.target.result,\r\n                code: 'code_empty'\r\n            } ).then(data => console.log(data) )\r\n                .catch(err => console.log(err))\r\n        });\r\n        FR.readAsDataURL( images[0] );\r\n\r\n        for (var i = 0; i < images.length; i++) {\r\n            var file = images[i];\r\n            var imageType = /^image\\//;\r\n\r\n            if (!imageType.test(file.type)) {\r\n                continue;\r\n            }\r\n\r\n            var img = document.createElement(\"img\");\r\n            img.classList.add(\"obj\");\r\n            img.file = file;\r\n            document.getElementById(\"preview\").appendChild(img); // En admettant que \"preview\" est l'élément div qui contiendra le contenu affiché.\r\n\r\n            var reader = new FileReader();\r\n            reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    return  (\r\n        <div>\r\n            <h1>Search image from Unsplash</h1>\r\n            <SearchImages setSearchValue={setSearchValue} searchValue={searchValue}/>\r\n            <div className=\"App-header\">\r\n\r\n                <label>Search image from my files</label>\r\n                <input onChange={(event)=> GiveImages(event.target.files)} type=\"file\" id=\"id-file\"/>\r\n                <div id=\"preview\"></div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default DlImages",["86","87"],"/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/DatabaseLog.js",[],"/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImage/SearchImages.jsx",["88","89"],"import React, { useState, useEffect } from 'react'\nimport { createApi } from 'unsplash-js'\nimport axios from \"axios\";\nimport ImageGrid from './ImageGrid'\n\nconst IMAGE_NUMBER = 10\n\nconst  SearchImage = props => {\n    const [images, setImages] = useState(undefined)\n    const [currentCityImgUrl, setCurrentCityImgUrl] = useState(undefined);\n\n    const unsplash = createApi({\n        accessKey: 'VleyzCT_-kQShHR-NsTdEe8mSpV7BUJL0uCG4FpHn6g',\n    });\n\n    useEffect( async () => {\n        unsplash.search.getPhotos({ query: props.cityName }).then(result => {\n            const urls = []\n            for (let i = 0; i < IMAGE_NUMBER; ++i) {\n                urls.push(result.response.results[i].urls.small)\n            }\n            const data = { city: props.cityName, urls }\n            setImages(data)\n        })\n        await axios.get('http://localhost:8080/api/city/city_path/'+ props.cityName)\n            .then(response => {\n                console.log(response)\n                setCurrentCityImgUrl(response.data)\n            })\n            .catch(err => console.log(err))\n        console.log(currentCityImgUrl)\n    }, []);\n\n    return (\n        <>\n            <div> L'image chosie <i className=\" text-yellow-400 fas fa-star\"></i></div>\n            <div className=\"flex justify-between\">\n                <div className=\"m-2 p-1 border-4 border-yellow-400 rounded-md\">\n                    <div className=\"text-center my-2 font-bold\">Image WikiData</div>\n                    <img src={currentCityImgUrl} alt=\"\"/>\n                </div>\n                <div className=\"m-2 p-1 border-4 border-blue-500 rounded-md\">\n                    <div className=\"text-center my-2 font-bold\">Image Unsplash</div>\n                    <img src={currentCityImgUrl} alt=\"\"/>\n                </div>\n                <div className=\"m-2 p-1 border-4 border-blue-500 rounded-md\">\n                    <div className=\"text-center my-2 font-bold\">Image locale</div>\n                    <img src={currentCityImgUrl} alt=\"\"/>\n                </div>\n            </div>\n            <div>\n                <div className=\"text-blue-500 text-2xl text-center font-bold m-4\"><i className=\"fab fa-unsplash\"></i> Changer l'image unspash</div>\n                <div>\n                    { images && <ImageGrid wikicode={props.wikicode} images={images} />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SearchImage","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/dlImage/ImageGrid.jsx",["90"],"import React from 'react'\nimport Block from 'react-blocks'\nimport axios from 'axios'\n\nconst ImageGrid = ({ images, wikicode }) => {\n    console.log(images)\n    const handleOnclick = (e) => {\n\n        axios.post('http://localhost:8080/api/city/city_update_unsplash_path', {\n            unsplash_url: e.target.src,\n            code: wikicode\n        } ).then(data => console.log(data))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <ul className=\"flex wrap\">\n            {images.urls.map(item => {\n                return (\n                    <li className=\"flex-grow\" style={{height: '20vh'}}>\n                        <img className=\"max-h-full max-w-full align-bottom object-cover\"  onClick={handleOnclick} src={item} alt={item} />\n                    </li>\n                )\n            })}\n            <li style={{ 'flex-grow': '10'}}></li>\n        </ul>\n\n    )\n}\n\nexport default ImageGrid","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/ListCities.js",["91"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst ListCities = () => {\r\n    const [cities, setCities] = useState([]);\r\n    const [city, setCity] = useState([]);\r\n    const [citiesSave, setCitiesSave] = useState(null)\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/api/city\").then(resp => {\r\n            setCities(resp.data)\r\n            setCitiesSave(resp.data);\r\n        })\r\n    },[])\r\n\r\n    const show_img = async e => {\r\n        let res = await axios.get(\"http://localhost:8080/api/city/city_path/\" + e.target.value)\r\n        this.setState({ img: <img src={res.data} alt=\"\"/> })\r\n    }\r\n\r\n    const filterCity = (e) => {\r\n        setCity(e.target.value)\r\n        console.log(city.length)\r\n        city.length > 2\r\n            ? setCities(citiesSave.filter(citySave => citySave.name.toLowerCase().includes(city.toLowerCase())))\r\n            : setCities(citiesSave)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='p-4 flex flex-col items-center'>\r\n                <label className='font-bold'>Rechercher une ville</label>\r\n                <input placeholder='nom de la ville' className='px-2 py-1 border-2 rounded-lg w-64 outline-none focus:border-blue-700' type=\"text\" value={city} onChange={filterCity}/>\r\n            </div>\r\n            <table className='m-auto'>\r\n                <thead className=''>\r\n                <tr>\r\n                    <th className='p-2 border-2'>Nom de la ville</th>\r\n                    <th className='p-2 border-2'>Image (si déjà chargée)</th>\r\n                    <th className='p-2 border-2'>edit</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {cities.map(city => {\r\n                    let path = null;\r\n                    if(city.city_path === null){}\r\n                    else if(city.city_path.img_base64){\r\n                        let buf = new Buffer(city.city_path.img_base64, 'base64')\r\n                        path = buf.toString('ascii');\r\n                    }\r\n                    else if(city.city_path.photo_path_unsplash)\r\n                        path = city.city_path.photo_path_unsplash\r\n                    else if(city.city_path.default_path)\r\n                        path = city.city_path.default_path\r\n\r\n                    return (<tr>\r\n                        <td className='p-2 border-2'>{city.name}</td>\r\n                        <td className='p-6 border-b-2 flex justify-center'><img className='max-h-32' src={path} alt=\"\"/></td>\r\n                        <td className='p-2 border-2'>\r\n                            <a href={'/city/'+ city.tags.wikidata + '/' + city.name}>\r\n                                <i className='fa fa-edit fa-fw'/>\r\n                            </a>\r\n                        </td>\r\n                    </tr>)\r\n                })}\r\n\r\n                </tbody>\r\n            </table>\r\n            {/*                <select name=\"cities\" onChange={show_img}>\r\n                    {this.cities.map(city => (<option value={city}>{city}</option>))}\r\n                </select>\r\n                <div>\r\n                    {img}\r\n                </div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListCities;","/mnt/c/wamp64/www/MeetHalfWayUploadImg/front/src/components/DetailCity.js",[],{"ruleId":"92","severity":1,"message":"93","line":3,"column":27,"nodeType":"94","messageId":"95","endLine":3,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":27,"nodeType":"94","messageId":"95","endLine":2,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"97","line":10,"column":15,"nodeType":"94","messageId":"95","endLine":10,"endColumn":17},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":16,"column":16,"nodeType":"106","endLine":32,"endColumn":6},{"ruleId":"104","severity":1,"message":"107","line":32,"column":8,"nodeType":"108","endLine":32,"endColumn":10,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"110","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"111","line":15,"column":11,"nodeType":"94","messageId":"95","endLine":15,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'cl' is assigned a value but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'currentCityImgUrl', 'props.cityName', and 'unsplash.search'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'Block' is defined but never used.","'show_img' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [currentCityImgUrl, props.cityName, unsplash.search]",{"range":"117","text":"118"},[1122,1124],"[currentCityImgUrl, props.cityName, unsplash.search]"]